<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.gxc15090111.garage.mapper.StopRecordingMapper">
  <resultMap id="BaseResultMap" type="com.gxc15090111.garage.entity.StopRecording">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="garageid" jdbcType="BIGINT" property="garageid" />
    <result column="userid" jdbcType="BIGINT" property="userid" />
    <result column="car_number" jdbcType="VARCHAR" property="carNumber" />
    <result column="phone" jdbcType="VARCHAR" property="phone" />
    <result column="intime" jdbcType="TIMESTAMP" property="intime" />
    <result column="outtime" jdbcType="TIMESTAMP" property="outtime" />
    <result column="totaltime" jdbcType="BIGINT" property="totaltime" />
    <result column="price" jdbcType="DECIMAL" property="price" />
    <result column="amount" jdbcType="DECIMAL" property="amount" />
    <result column="status" jdbcType="SMALLINT" property="status" />
    <result column="item_id" jdbcType="BIGINT" property="itemId" />
    <result column="price_unit_id" jdbcType="INTEGER" property="priceUnitId" />
  </resultMap>
  <sql id="Base_Column_List">
    id, garageid, userid, car_number, phone, intime, outtime, totaltime, price, amount, 
    status, item_id, price_unit_id
  </sql>

  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from stop_recording
    where id = #{id,jdbcType=BIGINT}
  </select>

    <select id="queryStopRecordingByUserId" parameterType="string" resultMap="BaseResultMap" >
        select <include refid="Base_Column_List" />
        from stop_recording
        where userid = #{userId}
        and amount is null
        order by intime desc
        limit 1
    </select>

    <select id="queryByParameter" parameterType="com.gxc15090111.garage.parameter.StopRecordingQueryParameter" resultMap="BaseResultMap" >
      select <include refid="Base_Column_List" />
      from stop_recording
      <where>
          <if test="garageid    != null">                        and garageid = #{garageid}                      </if>
          <if test="userid      != null">                        and userid = #{userid}                          </if>
          <if test="carNumber   != null and carNumber != ''"> and carNumber like CONCAT('%',#{carNumber},'%')</if>
          <if test="phone       != null and phone != ''">      and phone like CONCAT('%',#{phone},'%')        </if>
          <if test="status      != null">                        and status = #{status}                          </if>

          <if test="useridArray != null">
             and userid in
            <foreach collection="useridArray" item ="item" index="i" open="(" separator="," close=")">
              #{item}
            </foreach>
          </if>
      </where>

        <if test=" sort != ''">
            order by ${sort}
            <if test=" order != ''">
                ${order}
            </if>
        </if>

        <if test=" sort == null or sort == ''">
            order by intime
            <if test=" order == null or order == ''">
                desc
            </if>
        </if>

    </select>

    <select id="queryUserStopRecording" parameterType="com.gxc15090111.garage.parameter.UserStopRecordingQueryParameter" resultType="com.gxc15090111.garage.vo.UserStopRecordingVO">
        select s.userid, u.name, u.sex, u.phone, u.type,
                s.garageid, s.car_number, s.intime, s.outtime, s.totaltime, s.price, s.amount, s.status,
                gi.code, gi.level,
                pu.unit, pu.uname
        from stop_recording s
        left join user u on s.userid = u.id
        left join garage_item gi on s.item_id = gi.id
        left join price_unit pu on s.price_unit_id = pu.id

      <where>

          <if test="userid    != null">                        and userid = #{userid}                    </if>
          <if test="name      != null and name != ''">       and name like CONCAT('%',#{name},'%')   </if>
          <if test="sex       != null">                        and sex = #{sex}                          </if>
          <if test="phone     != null and phone != ''">      and s.phone like CONCAT('%',#{phone},'%') </if>
          <if test="type      != null">                        and type = #{type}                       </if>


          <if test="garageid    != null">                        and garageid = #{garageid}                      </if>
          <if test="carNumber   != null and carNumber != ''"> and carNumber like CONCAT('%',#{carNumber},'%')</if>
          <if test="status      != null">                        and status = #{status}                          </if>
          <if test="price       != null">                        and price = #{price}                            </if>

          <if test="intimeStart  != null and intimeStart != '' "> and intime &gt;=	#{intimeStart}	           </if>
          <if test="intimeEnd    != null and intimeEnd != ''   "> and intime &lt;=	#{intimeEnd}		       </if>
          <if test="outtimeStart != null and outtimeStart != ''"> and outtime &gt;=	#{outtimeStart}	           </if>
          <if test="outtimeEnd   != null and outtimeEnd != ''  "> and outtime &lt;=	#{outtimeEnd}		       </if>

          <if test="code        != null and code != ''  ">     and code = #{code}                             </if>
          <if test="level       != null">                         and price = #{level}                          </if>

          <if test="useridArray != null">
             and userid in
            <foreach collection="useridArray" item ="item" index="i" open="(" separator="," close=")">
              #{item}
            </foreach>
          </if>
      </where>

        <if test=" sort != ''">
            order by ${sort}
            <if test=" order != ''">
                ${order}
            </if>
        </if>

        <if test=" sort == null or sort == ''">
            order by intime
            <if test=" order == null or order == ''">
                desc
            </if>
        </if>

    </select>

  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from stop_recording
    where id = #{id,jdbcType=BIGINT}
  </delete>

  <insert id="insert" parameterType="com.gxc15090111.garage.entity.StopRecording">
    insert into stop_recording (garageid, userid,
      car_number, phone, intime, 
      outtime, totaltime, price, 
      amount, status, item_id, 
      price_unit_id)
    values (#{garageid,jdbcType=BIGINT}, #{userid,jdbcType=BIGINT},
      #{carNumber,jdbcType=VARCHAR}, #{phone,jdbcType=VARCHAR}, #{intime,jdbcType=TIMESTAMP}, 
      #{outtime,jdbcType=TIMESTAMP}, #{totaltime,jdbcType=BIGINT}, #{price,jdbcType=DECIMAL}, 
      #{amount,jdbcType=DECIMAL}, #{status,jdbcType=SMALLINT}, #{itemId,jdbcType=BIGINT}, 
      #{priceUnitId,jdbcType=INTEGER})
  </insert>

  <insert id="insertSelective" parameterType="com.gxc15090111.garage.entity.StopRecording">
    insert into stop_recording
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="garageid != null">
        garageid,
      </if>
      <if test="userid != null">
        userid,
      </if>
      <if test="carNumber != null">
        car_number,
      </if>
      <if test="phone != null">
        phone,
      </if>
      <if test="intime != null">
        intime,
      </if>
      <if test="outtime != null">
        outtime,
      </if>
      <if test="totaltime != null">
        totaltime,
      </if>
      <if test="price != null">
        price,
      </if>
      <if test="amount != null">
        amount,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="itemId != null">
        item_id,
      </if>
      <if test="priceUnitId != null">
        price_unit_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="garageid != null">
        #{garageid,jdbcType=BIGINT},
      </if>
      <if test="userid != null">
        #{userid,jdbcType=BIGINT},
      </if>
      <if test="carNumber != null">
        #{carNumber,jdbcType=VARCHAR},
      </if>
      <if test="phone != null">
        #{phone,jdbcType=VARCHAR},
      </if>
      <if test="intime != null">
        #{intime,jdbcType=TIMESTAMP},
      </if>
      <if test="outtime != null">
        #{outtime,jdbcType=TIMESTAMP},
      </if>
      <if test="totaltime != null">
        #{totaltime,jdbcType=BIGINT},
      </if>
      <if test="price != null">
        #{price,jdbcType=DECIMAL},
      </if>
      <if test="amount != null">
        #{amount,jdbcType=DECIMAL},
      </if>
      <if test="status != null">
        #{status,jdbcType=SMALLINT},
      </if>
      <if test="itemId != null">
        #{itemId,jdbcType=BIGINT},
      </if>
      <if test="priceUnitId != null">
        #{priceUnitId,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.gxc15090111.garage.entity.StopRecording">
    update stop_recording
    <set>
      <if test="garageid != null">
        garageid = #{garageid,jdbcType=BIGINT},
      </if>
      <if test="userid != null">
        userid = #{userid,jdbcType=BIGINT},
      </if>
      <if test="carNumber != null">
        car_number = #{carNumber,jdbcType=VARCHAR},
      </if>
      <if test="phone != null">
        phone = #{phone,jdbcType=VARCHAR},
      </if>
      <if test="intime != null">
        intime = #{intime,jdbcType=TIMESTAMP},
      </if>
      <if test="outtime != null">
        outtime = #{outtime,jdbcType=TIMESTAMP},
      </if>
      <if test="totaltime != null">
        totaltime = #{totaltime,jdbcType=BIGINT},
      </if>
      <if test="price != null">
        price = #{price,jdbcType=DECIMAL},
      </if>
      <if test="amount != null">
        amount = #{amount,jdbcType=DECIMAL},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=SMALLINT},
      </if>
      <if test="itemId != null">
        item_id = #{itemId,jdbcType=BIGINT},
      </if>
      <if test="priceUnitId != null">
        price_unit_id = #{priceUnitId,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.gxc15090111.garage.entity.StopRecording">
    update stop_recording
    set garageid = #{garageid,jdbcType=BIGINT},
      userid = #{userid,jdbcType=BIGINT},
      car_number = #{carNumber,jdbcType=VARCHAR},
      phone = #{phone,jdbcType=VARCHAR},
      intime = #{intime,jdbcType=TIMESTAMP},
      outtime = #{outtime,jdbcType=TIMESTAMP},
      totaltime = #{totaltime,jdbcType=BIGINT},
      price = #{price,jdbcType=DECIMAL},
      amount = #{amount,jdbcType=DECIMAL},
      status = #{status,jdbcType=SMALLINT},
      item_id = #{itemId,jdbcType=BIGINT},
      price_unit_id = #{priceUnitId,jdbcType=INTEGER}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>